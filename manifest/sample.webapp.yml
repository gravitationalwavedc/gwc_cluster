apiVersion: v1
items:
# Namespace
- apiVersion: v1
  kind: Namespace
  metadata:
    name: webapp

# Ingress
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    name: gwc-ing
    namespace: webapp
    annotations:
      kubernetes.io/ingress.class: "nginx"
  spec:
    rules:
    - host: gw-cloud.org
      http:
        paths:
        - path: /
          backend:
            serviceName: gwc-web
            servicePort: 8000

# mysql persistent volume
#   this uses a node's FS for it be mounted to a pod
#   it is not ideal as it makes the persistent volume
#   to be host dependent
# Until cephfs is ready, consider using NFS
#   https://github.com/kubernetes/examples/tree/master/staging/volumes/nfs
# If time permits, use a POC node and deploy cepf to it
#  when POC node is ready for consumption refer to cepfs sample
#   https://github.com/kubernetes/examples/tree/master/staging/volumes/nfs
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: pv-gwcloud
    namespace: webapp
    labels:
      type: local
  spec:
    storageClassName: manual
    capacity:
      storage: 1Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Retain
    hostPath:
      path: "<mounted path from storage cluster>"

# mysql deployment
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: gwcloud-db
    namespace: webapp
    labels:
      app: gwcloud
      role: database
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: gwcloud
          role: database
      spec:
        containers:
        - name: mysql
          image: mysql:5.7
          ports:
          - name: port-mysql
            containerPort: 3306
          env:
          - name: MYSQL_ROOT_PASSWORD
            value: "<enter mysql root pass here>"
          - name: MYSQL_DATABASE
            value: "<enter mysql db name here>"
          - name: MYSQL_USER
            value: "<enter mysql user here>"
          - name: MYSQL_PASSWORD
            value: "<enter mysql pass here>"

# mysql persistent volume claim
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: gwcloud-db
    namespace: webapp
    labels:
      app: gwcloud
      role: db-pvc
  spec:
    storageClassName: manual
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  status: {}


# webapp
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: gwcloud-web
    namespace: webapp
    labels:
      app: gwcloud
      role: web
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: gwcloud
          role: web
      spec:
        containers:
        - name: gwcloud-web
          image: dg_webapp:latest
          ports:
          - name: webui
            containerPort: 8000
          - name: jobcontroller
            containerPort: 8001
          resources: {}
          tty: true
          env:
          - name: MYSQL_ROOT_PASSWORD
            value: "<enter mysql root pass here>"
          - name: MYSQL_DATABASE
            value: "<enter mysql db name here>"
          - name: MYSQL_USER
            value: "<enter mysql user here>"
          - name: MYSQL_PASSWORD
            value: "<enter mysql pass here>"
          - name: MYSQL_HOST
            value: 
          - name: SITE_URL
            value: awx-cache
        restartPolicy: Always
kind: List
metadata: {}